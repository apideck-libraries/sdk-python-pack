"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import List, Literal, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


FiveTypedDict = TypeAliasType("FiveTypedDict", Union[str, int, float])


Five = TypeAliasType("Five", Union[str, int, float])


SimpleFormFieldOptionValueTypedDict = TypeAliasType(
    "SimpleFormFieldOptionValueTypedDict",
    Union[str, int, float, bool, List[FiveTypedDict]],
)


SimpleFormFieldOptionValue = TypeAliasType(
    "SimpleFormFieldOptionValue", Union[str, int, float, bool, List[Five]]
)


class SimpleFormFieldOptionTypedDict(TypedDict):
    label: str
    value: NotRequired[SimpleFormFieldOptionValueTypedDict]
    option_type: Literal["simple"]


class SimpleFormFieldOption(BaseModel):
    label: str

    value: Optional[SimpleFormFieldOptionValue] = None

    OPTION_TYPE: Annotated[
        Annotated[Literal["simple"], AfterValidator(validate_const("simple"))],
        pydantic.Field(alias="option_type"),
    ] = "simple"
